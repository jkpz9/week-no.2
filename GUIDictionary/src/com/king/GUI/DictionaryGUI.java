package com.king.GUI;

import com.king.DOMParser.XMLReader;
import com.king.Model.Data;
import com.king.Model.SearchHistory;
import com.king.Model.SearchModel;
import com.king.Utils.FileOperations;
import com.king.Utils.StringFormating;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class DictionaryGUI extends javax.swing.JFrame {
    public static final int  EN_MODE = 0;
    public static final int VN_MODE = 1;
    private DefaultListModel<String>mod;
    private DefaultListModel<String> mod2;
    private int currentMode = -1;
    private ArrayList<Data> arr;
    private ArrayList<Data> arr2;
    private String PathToEn2VnFile;
    private String PathToVn2EnFile;
    private String PathToHistoryFile;
    private String PathToFavoriteFile;
    
    // config input and outpu file Location
    private void settingConfig(String pathToConfigFile) throws IOException
    {
        FileReader rd = null;
        BufferedReader buffer = null;
        try {
                rd = new FileReader(new File(pathToConfigFile));

                buffer = new BufferedReader(rd);	
                String line = "";

                while((line = buffer.readLine()) != null) {
                        // System.out.println(line);
                        String[] token = line.split("=");
                        if ("En2Vn_Url".equalsIgnoreCase(token[0]))
                            PathToEn2VnFile = token[1];
                        else if ("Vn2En_Url".equalsIgnoreCase(token[0]))
                            PathToVn2EnFile = token[1];
                        else if ("History_Url".equalsIgnoreCase(token[0]))
                            PathToHistoryFile = token[1];
                        else if ("Favorite_Url".equalsIgnoreCase(token[0]))
                            PathToFavoriteFile = token[1];
                }
        } catch(IOException ex)
        {
        } finally {
                if (buffer != null) buffer.close();
                if (rd != null) rd.close();
        }
    }
    
    // use for move GUI
    private int xx, yy;
    
    public DictionaryGUI(String configFile) throws IOException {
        initComponents();
        settingConfig(configFile);
    }
    
    // hightlight color for label component
    public void setColorForJLable(JLabel lbl , Color color) {
        lbl.setBackground(color);
    }
    
    // original color for lable component
    public void resetColorForJLable(JLabel lbl, Color color) {
         lbl.setBackground(color);
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerPanel = new javax.swing.JPanel();
        appIcon = new javax.swing.JLabel();
        btn_Close = new javax.swing.JLabel();
        leftPanel = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        sp = new javax.swing.JScrollPane();
        list = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        UKtoVN = new javax.swing.JLabel();
        VNtoUK = new javax.swing.JLabel();
        btn_create1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtResult = new javax.swing.JTextPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListFavorite = new javax.swing.JList<>();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        headerPanel.setBackground(new java.awt.Color(40, 53, 147));
        headerPanel.setForeground(new java.awt.Color(255, 255, 255));
        headerPanel.setEnabled(false);
        headerPanel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        headerPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                headerPanelMouseDragged(evt);
            }
        });
        headerPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                headerPanelMousePressed(evt);
            }
        });

        appIcon.setBackground(new java.awt.Color(26, 35, 126));
        appIcon.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        appIcon.setForeground(new java.awt.Color(255, 255, 255));
        appIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        appIcon.setText("X");
        appIcon.setOpaque(true);
        appIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                appIconMouseClicked(evt);
            }
        });

        btn_Close.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/king/Resources/Images/g6706-48.png"))); // NOI18N

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addComponent(btn_Close)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(appIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(headerPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btn_Close))
                    .addGroup(headerPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(appIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        leftPanel.setBackground(java.awt.Color.white);

        jPanel4.setBackground(java.awt.Color.white);

        jLabel1.setBackground(new java.awt.Color(0, 153, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/king/Resources/Images/698956-icon-111-search-48.png"))); // NOI18N

        txtSearch.setFont(new java.awt.Font("DialogInput", 0, 14)); // NOI18N
        txtSearch.setForeground(new java.awt.Color(1, 1, 1));
        txtSearch.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSearch.setBorder(null);
        txtSearch.setCaretColor(new java.awt.Color(69, 73, 74));
        txtSearch.setMargin(new java.awt.Insets(3, 10, 3, 10));
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchKeyTyped(evt);
            }
        });

        jSeparator1.setBackground(new java.awt.Color(255, 23, 68));
        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jButton1.setBackground(new java.awt.Color(30, 136, 229));
        jButton1.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("GO");
        jButton1.setBorder(null);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtSearch)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(txtSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        list.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        list.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listValueChanged(evt);
            }
        });
        sp.setViewportView(list);

        jPanel1.setBackground(new java.awt.Color(25, 118, 210));

        UKtoVN.setBackground(new java.awt.Color(255, 255, 255));
        UKtoVN.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        UKtoVN.setForeground(new java.awt.Color(255, 255, 255));
        UKtoVN.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        UKtoVN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/king/Resources/Images/United_Kingdom-48.png"))); // NOI18N
        UKtoVN.setToolTipText("");
        UKtoVN.setOpaque(true);
        UKtoVN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                UKtoVNMousePressed(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UKtoVNMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                UKtoVNMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                UKtoVNMouseEntered(evt);
            }
        });

        VNtoUK.setBackground(new java.awt.Color(255, 255, 255));
        VNtoUK.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        VNtoUK.setForeground(new java.awt.Color(255, 255, 255));
        VNtoUK.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        VNtoUK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/king/Resources/Images/95-Vietnam_Vietnamese_VNM_Asia_asian_country_flag_-48.png"))); // NOI18N
        VNtoUK.setToolTipText("");
        VNtoUK.setOpaque(true);
        VNtoUK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                VNtoUKMouseClicked(evt);
            }
        });

        btn_create1.setBackground(new java.awt.Color(255, 255, 255));
        btn_create1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btn_create1.setForeground(new java.awt.Color(255, 255, 255));
        btn_create1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btn_create1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/king/Resources/Images/heart-64.png"))); // NOI18N
        btn_create1.setToolTipText("");
        btn_create1.setOpaque(true);
        btn_create1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_create1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_create1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_create1MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_create1MousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btn_create1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(VNtoUK, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UKtoVN, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(UKtoVN, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(VNtoUK, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_create1)
                .addContainerGap(200, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(leftPanelLayout);
        leftPanelLayout.setHorizontalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sp, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                .addContainerGap())
        );
        leftPanelLayout.setVerticalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(leftPanelLayout.createSequentialGroup()
                        .addComponent(sp)
                        .addContainerGap())))
        );

        jTabbedPane1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        txtResult.setContentType("text/html"); // NOI18N
        txtResult.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtResult.setForeground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(txtResult);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Meaning", jPanel2);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jListFavorite.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jListFavorite.setSelectionBackground(new java.awt.Color(38, 50, 56));
        jListFavorite.setSelectionForeground(new java.awt.Color(255, 255, 255));
        jScrollPane3.setViewportView(jListFavorite);

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/king/Resources/Images/if_sort-ascend_84916.png"))); // NOI18N
        jButton3.setBorder(null);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/king/Resources/Images/if_sort-descend_44383.png"))); // NOI18N
        jButton4.setBorder(null);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/king/Resources/Images/trash_32 (1).png"))); // NOI18N
        jButton5.setBorder(null);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 417, Short.MAX_VALUE)
                .addGap(25, 25, 25))
        );

        jTabbedPane1.addTab("Favorite", jPanel3);

        jTable1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Word", "Frequent"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(java.awt.Color.white);
        jTable1.setInheritsPopupMenu(true);
        jTable1.setRowHeight(20);
        jTable1.setSelectionBackground(new java.awt.Color(1, 198, 83));
        jTable1.setSelectionForeground(new java.awt.Color(255, 255, 255));
        jScrollPane2.setViewportView(jTable1);

        jLabel3.setFont(new java.awt.Font("Noto Sans", 2, 13)); // NOI18N
        jLabel3.setText("To");

        jLabel4.setFont(new java.awt.Font("Noto Sans", 2, 13)); // NOI18N
        jLabel4.setText("From ");

        jButton2.setBackground(new java.awt.Color(255, 0, 51));
        jButton2.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("View");
        jButton2.setBorder(null);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(jLabel3)
                .addGap(3, 3, 3)
                .addComponent(jDateChooser2, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("statictis", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(headerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(leftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(leftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jTabbedPane1))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

   
    private void headerPanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headerPanelMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        
        this.setLocation(x-xx, y-yy);

    }//GEN-LAST:event_headerPanelMouseDragged
     // calculate currently position
    private void headerPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headerPanelMousePressed
        xx = evt.getX();
        yy = evt.getY();
    }//GEN-LAST:event_headerPanelMousePressed

    private void appIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_appIconMouseClicked
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog (null, "Do you really want to close the app!","Warning",dialogButton);
        if(dialogResult == JOptionPane.YES_OPTION){
             System.exit(0);
       }

    }//GEN-LAST:event_appIconMouseClicked
       private void loadEn2Vnese() {
           arr = XMLReader.readXMLFILE(this.PathToEn2VnFile);//"src/com/king/Resources/Anh_Viet.xml"
       
       }
       
       private void loadVnese2En() {
           arr2 = XMLReader.readXMLFILE(this.PathToVn2EnFile);//"src/com/king/Resources/Viet_Anh.xml"
       
       }
       
       private void updateModel(ArrayList<Data> str)
       {
           mod.clear();
           str.forEach((word) -> {
            mod.addElement(word.getWord());
        }); 
       }
    // initial List model
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
      mod = new DefaultListModel<>();
      list.setModel(mod);
      loadVnese2En();
      loadEn2Vnese();
      setColorForJLable(UKtoVN, new Color(13,71,161));
    }//GEN-LAST:event_formWindowOpened
    
    private void changeMode(int mode)
    {
        if (mode == EN_MODE || mode == VN_MODE) this.currentMode = mode;
        else {
            throw new IllegalArgumentException("Only support en2vn and vn2en");
        }
    }
    private void listValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listValueChanged
        list.ensureIndexIsVisible(list.getSelectedIndex());
    }//GEN-LAST:event_listValueChanged

    // while typing
    private void txtSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyTyped
       list.clearSelection();
        String txt = txtSearch.getText().trim();
       txt += evt.getKeyChar();
       txt = txt.trim();
       for ( int i=0; i< mod.size(); i++) {
           String val = ""+mod.getElementAt(i);
           val = val.toLowerCase();
           if (val.startsWith(txt.toLowerCase())) {
               list.setSelectedIndex(i);
               //JScrollBar sb = sp.getVerticalScrollBar();
               //sb.setValue(i*20);
               
               return;
           } 
       }
       //list.clearSelection();
       
    }//GEN-LAST:event_txtSearchKeyTyped

    private void UKtoVNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UKtoVNMouseClicked
       this.setColorForJLable(UKtoVN, new Color(13,71,161));
       this.resetColorForJLable(VNtoUK, new Color(240,240,240));
       updateModel(this.arr);
       changeMode(EN_MODE);
    }//GEN-LAST:event_UKtoVNMouseClicked

    private void VNtoUKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VNtoUKMouseClicked
       this.setColorForJLable(UKtoVN, new Color(240,240,240));
       this.resetColorForJLable(VNtoUK, new Color(13,71,161));
       updateModel(this.arr2);
       changeMode(VN_MODE);
    }//GEN-LAST:event_VNtoUKMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jTabbedPane1.setSelectedIndex(0);
        if (!list.isSelectionEmpty()) {
            try {
                int index = list.getSelectedIndex();
                Data obj=null;
                if (currentMode == EN_MODE) obj = arr.get(index);
                else if (currentMode == VN_MODE)  obj = arr2.get(index);
                if (obj == null) return;
                
                //String newline = System.getProperty("line.separator"); 
                // this not working well on windows
                String newline = "\n";
                List<String> arr_str = StringFormating.splitByCharacter(obj.getMeaning(), newline);
                txtResult.setText(StringFormating.formating(arr_str));
                
                // add word to memory history
                DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
                Date date = new Date();
                //System.out.println(dateFormat.format(date))
                FileOperations.saveObj(this.PathToHistoryFile, new SearchModel(obj.getWord(), date));
            } catch (IOException ex) {
                Logger.getLogger(DictionaryGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
       }
       else {
           txtResult.setText("<font color=red>This word is not found!</font>");
       }
         
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btn_create1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_create1MousePressed
        if (!list.isSelectionEmpty()) {
            //String desPath = "src/com/king/Resources/favorite.txt";
            int index = list.getSelectedIndex();
            Data obj =null;
            if (currentMode == EN_MODE) obj = arr.get(index);
            else if (currentMode == VN_MODE) obj = arr2.get(index);
            if (obj == null) return;
            try {
                ArrayList<String> favorites = FileOperations.readLineByLineAndBuildList(this.PathToFavoriteFile);
                Iterator<String> it = favorites.iterator();
                while(it.hasNext()) {
                    String currentWord = it.next();
                    if (currentWord.equalsIgnoreCase(obj.getWord())) {
                        JOptionPane.showMessageDialog(null, "This word already in your favorite List :)");
                        return;
                    }
          } 
          FileOperations.WriteLine(this.PathToFavoriteFile, obj.getWord());
           JOptionPane.showMessageDialog(null, obj.getWord()+" added to your favorite list");
           jTabbedPane1.setSelectedIndex(1);
           
          
      } catch (IOException ex) {
            Logger.getLogger(DictionaryGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        } else {
            JOptionPane.showMessageDialog(this, "This word no found in the DB OR YOU have not selected yet!");
        }
        
    }//GEN-LAST:event_btn_create1MousePressed

    private void btn_create1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_create1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_create1MouseClicked

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
       int tab = jTabbedPane1.getSelectedIndex();
       if (tab == 1) {
           mod2 = new DefaultListModel<>();
           try {
                String desPath = "src/com/king/Resources/favorite.txt";
               ArrayList<String> favorite = FileOperations.readLineByLineAndBuildList(this.PathToFavoriteFile);
               for (String word : favorite) {
                   mod2.addElement(word);
               }
               jListFavorite.setModel(mod2);
               jListFavorite.setSelectedIndex(0);
           } catch (IOException ex) {
               Logger.getLogger(DictionaryGUI.class.getName()).log(Level.SEVERE, null, ex);
           }
           
       }
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       //if (beginDate.getD)
       if (jDateChooser2.getDate() == null) {
            JOptionPane.showMessageDialog(this, "Please select start day");
            jDateChooser2.grabFocus();
            return;
       }
       else if (jDateChooser1.getDate() == null) {
           JOptionPane.showMessageDialog(this, "Please select end day");
           jDateChooser1.grabFocus();
            return;
       }
       else if (jDateChooser2.getDate().compareTo(jDateChooser1.getDate()) < 0) {
           JOptionPane.showMessageDialog(this, "End date must be equal or greater than start date!");
            return;
       }
       else {
//           System.out.println("Start time: " + new SimpleDateFormat("MM-dd-yyyy").format(jDateChooser2.getDate()));
//           System.out.println("End time: " + new SimpleDateFormat("MM-dd-yyyy").format(jDateChooser1.getDate()));
           
           SearchHistory historySearch = new SearchHistory();
           //"src/com/king/Resources/History.bin"
           historySearch.readFromFile(this.PathToHistoryFile);
           Map<String, Integer> historyInTime  = historySearch.SearchStatictis(jDateChooser1.getDate(), jDateChooser2.getDate());
          DefaultTableModel dm = (DefaultTableModel)jTable1.getModel();
          int rowCount = dm.getRowCount();
          //Remove rows one by one from the end of the table
          for (int i = rowCount - 1; i >= 0; i--) {
              dm.removeRow(i);
          }
           //System.out.println("----------------STATICTIS---------------------");
          historyInTime.entrySet().forEach((entry) -> {
              dm.addRow( new Object[]{entry.getKey(), entry.getValue()});
              //System.out.println(entry.getKey() + ", " + entry.getValue());
           });
           
       }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       int tab = jTabbedPane1.getSelectedIndex();
       if (tab == 1) {
           mod2 = new DefaultListModel<>();
           try {
                //String desPath = "src/com/king/Resources/favorite.txt";
               ArrayList<String> favorite = FileOperations.readLineByLineAndBuildList(this.PathToFavoriteFile);
               Collections.reverse(favorite);
               favorite.forEach((word) -> {
                   mod2.addElement(word);
               });
               jListFavorite.setModel(mod2);
               jListFavorite.setSelectedIndex(0);
           } catch (IOException ex) {
               Logger.getLogger(DictionaryGUI.class.getName()).log(Level.SEVERE, null, ex);
           }
           
       }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int tab = jTabbedPane1.getSelectedIndex();
       if (tab == 1) {
           mod2 = new DefaultListModel<>();
           try {
                //String desPath = "src/com/king/Resources/favorite.txt";
               ArrayList<String> favorite = FileOperations.readLineByLineAndBuildList(this.PathToFavoriteFile);
               Collections.sort(favorite);
               favorite.forEach((word) -> {
                   mod2.addElement(word);
               });
               jListFavorite.setModel(mod2);
               jListFavorite.setSelectedIndex(0);
           } catch (IOException ex) {
               Logger.getLogger(DictionaryGUI.class.getName()).log(Level.SEVERE, null, ex);
           }
           
       }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void UKtoVNMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UKtoVNMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_UKtoVNMousePressed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if (!jListFavorite.isSelectionEmpty()) {
            String removeLine = jListFavorite.getSelectedValue();
            try {
                //System.out.println("Removing "+removeLine);
                //String desPath = "src/com/king/Resources/favorite.txt";
                FileOperations.remakeFromRemove(this.PathToFavoriteFile, removeLine);
            } catch (IOException ex) {
                Logger.getLogger(DictionaryGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
             ArrayList<String> favorites;
            try {
                favorites = FileOperations.readLineByLineAndBuildList(this.PathToFavoriteFile);
                 mod2.clear();
             favorites.forEach((str) -> {
                 mod2.addElement(str);
            });
            } catch (IOException ex) {
                Logger.getLogger(DictionaryGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            
             
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void btn_create1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_create1MouseEntered
       this.setColorForJLable(btn_create1, new Color(0,230,118));
    }//GEN-LAST:event_btn_create1MouseEntered

    private void btn_create1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_create1MouseExited
        this.setColorForJLable(btn_create1, new Color(255,255,255));
    }//GEN-LAST:event_btn_create1MouseExited

    private void UKtoVNMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UKtoVNMouseEntered
        //this.setColorForJLable(UKtoVN, new Color(255,61,0));
    }//GEN-LAST:event_UKtoVNMouseEntered

    private void UKtoVNMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UKtoVNMouseExited
       //this.setColorForJLable(UKtoVN, new Color(255,255,255));
    }//GEN-LAST:event_UKtoVNMouseExited

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Metal".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(DictionaryGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(DictionaryGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(DictionaryGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(DictionaryGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                DictionaryGUI jf = new DictionaryGUI();
//                jf.setLocationRelativeTo(null);
//                jf.setVisible(true);
//               // new NewJFrame().setLocationRelativeTo(null).setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel UKtoVN;
    private javax.swing.JLabel VNtoUK;
    private javax.swing.JLabel appIcon;
    private javax.swing.JLabel btn_Close;
    private javax.swing.JLabel btn_create1;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList<String> jListFavorite;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JList<String> list;
    private javax.swing.JScrollPane sp;
    private javax.swing.JTextPane txtResult;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
